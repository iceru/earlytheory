// Base Color
$background: #e7e7e7;
$background-secondary: #c4c4c4;
$body: #000;
$grey: #828282;

$primary: #4A2984;
$secondary: #c614cc;
$pink: #f186b0;
$filler-blue: #4c57d3;

.bg-color-secondary {
    background-color: $background-secondary;
}

.primary-color {
    color: $primary !important;
}

.grey-color {
    color: $grey !important;
}

.white-color {
    color: white;

    &:hover {
        color: currentColor;
    }
}

.evogria {
    font-family: "Evogria";
    color: black;
    text-transform: uppercase;
}

.skylar {
    font-family: "Skylar Sans";
    letter-spacing: 1px;
    font-weight: 700;
}

.mono {
    font-family: "Apercu Mono";
}

h1, h2, h3, h4, h5, h6, p {
    margin: 0;
}

//rules
a {
    text-decoration: none;
}

//Breakpoint
$breakpoints: (
    "small": 576px,
    "medium": 768px,
    "large": 992px,
    "xlarge": 1200px,
    "xxlarge": 1400px
) !default;

@mixin breakpoint($breakpoint) {
    // If the key exists in the map
    @if map-has-key($breakpoints, $breakpoint) {
        // Prints a media query based on the value
        @media (min-width: map-get($breakpoints, $breakpoint)) {
            @content;
        }
    }

    // If the key doesn't exist in the map
    @else {
        @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
          + "Available breakpoints are: #{map-keys($breakpoints)}.";
    }
}

@mixin breakpoint-down($breakpoint) {
    // If the key exists in the map
    @if map-has-key($breakpoints, $breakpoint) {
        // Prints a media query based on the value
        @media (max-width: map-get($breakpoints, $breakpoint)) {
            @content;
        }
    }

    // If the key doesn't exist in the map
    @else {
        @warn "Unfortunately, no value could be retrieved from `#{$breakpoint}`. "
          + "Available breakpoints are: #{map-keys($breakpoints)}.";
    }
}



.slick-prev {
    left: 10px ;
    z-index: 10;
}

.slick-next {
    right: 10px ;
    z-index: 10;
}

.slick-dots {
    bottom: 5px ;

    li {
        width: 30px ;
        height: 8px ;

        button {
            width: 30px ;
            height: 8px ;

            &:before {
                content: ' ';
                width: 30px ;
                height: 8px ;
                border-radius: 30px;
                background: $primary;
            }
        }
    }
}

